#include <epd2in9.h>
#include <epdpaint.h>

#include "settings.h"

#include "icons.h"

#include <OneButton.h>

#include "Render.h"

Render *render;

OneButton button1(GPIO_NUM_38, true);
OneButton button2(GPIO_NUM_37, true);
OneButton button3(GPIO_NUM_39, true);

// unsigned char image[2048];
// Paint paint(image, 0, 0);    // width should be the multiple of 8 
// Epd epd;

// void clearScreen() {
//     paint.SetWidth(128);
//     paint.SetHeight(128);

//     paint.Clear(UNCOLORED);
//     epd.SetFrameMemory(paint.GetImage(), 0, 0, paint.GetWidth(), paint.GetHeight());
//     epd.SetFrameMemory(paint.GetImage(), 0, 128, paint.GetWidth(), paint.GetHeight());
//     epd.SetFrameMemory(paint.GetImage(), 0, 256, paint.GetWidth(), paint.GetHeight());
//     epd.DisplayFrame();

//     paint.Clear(COLORED);
//     epd.SetFrameMemory(paint.GetImage(), 0, 0, paint.GetWidth(), paint.GetHeight());
//     epd.SetFrameMemory(paint.GetImage(), 0, 128, paint.GetWidth(), paint.GetHeight());
//     epd.SetFrameMemory(paint.GetImage(), 0, 256, paint.GetWidth(), paint.GetHeight());
//     epd.DisplayFrame();

//     epd.ClearFrameMemory(0xFF);   // bit set = white, bit reset = black
//     epd.DisplayFrame();

//     epd.ClearFrameMemory(0xFF);   // bit set = white, bit reset = black
//     epd.DisplayFrame();
// }

// // TODO: Hack "startsFromTop", fix
// void addImageToFrame(int x, int y, bool startsFromTop = false) {
//     // Flip coordinates
//     int img_center_x = y - (paint.GetHeight() / 2);
//     int img_center_y = x - (paint.GetWidth() / 2);
    
//     if(startsFromTop) {
//         img_center_x = y - (paint.GetWidth() / 2);
//         img_center_y = x - (paint.GetHeight() / 2);
//     }

//     epd.SetFrameMemory(paint.GetImage(), img_center_x, img_center_y, paint.GetWidth(), paint.GetHeight());
// }

// void drawRectangle(int x, int y, int w, int h) {
//     paint.SetWidth(h+8);
//     paint.SetHeight(w+8);

//     paint.Clear(UNCOLORED);
//     paint.DrawRectangle(4, 4, w+4, h+4, COLORED);
    
//     addImageToFrame(x, y);
// }

// void drawCircle(int x, int y, int r) {
//     paint.SetWidth(r*2+8);
//     paint.SetHeight(r*2+8);

//     paint.Clear(UNCOLORED);
//     paint.DrawCircle(r+4, r+4, r, COLORED);

//     addImageToFrame(x, y);
// }

// void drawText(int x, int y, const char *text, int COLOR) {
//     // 18 px per letter - font24
//     int w = strlen(text) * 18;
//     paint.SetWidth(24); // Should be 32
//     paint.SetHeight(w);

//     paint.Clear(!COLOR);
//     paint.DrawStringAt(0, 2, text, &Font24, COLOR);
//     addImageToFrame(x, y, true);
// }

// void drawImage(const unsigned char *IMAGE, int x, int y, int w, int h) {
//     epd.SetFrameMemory(IMAGE, y, x, w, h);
//     epd.SetFrameMemory(IMAGE, y, x, w, h);
// }

// void showMenu() {
//     drawText(40, 120, "HOME", UNCOLORED);

//     drawText(148, 64, "SEND", COLORED);

//     drawImage(LEFT_ARROW, 0, 32, 64, 64);
//     drawImage(RIGHT_ARROW, 232, 32, 64, 64);

//     epd.DisplayFrame();
// }

// void click1() {
//     Serial.println("Button 1 click.");
// }

void setup() {
    // put your setup code here, to run once:
    Serial.begin(115200);
   
    // if (epd.Init(lut_full_update) != 0) {
    //     Serial.print("e-Paper init failed");
    //     return;
    // }

    // epd.ClearFrameMemory(0xFF);   // bit set = white, bit reset = black
    // epd.DisplayFrame();

    // epd.ClearFrameMemory(0xFF);   // bit set = white, bit reset = black
    // epd.DisplayFrame();

    // if (epd.Init(lut_partial_update) != 0) {
    //     Serial.print("e-Paper init failed");
    //     return;
    // }
    
    // paint.SetRotate(ROTATE_90);

    // clearScreen();

    // showMenu();

    // button1.attachClick(click1);

    // render = Render();
    render = new Render();
}

void loop() {
    // button1.tick();
}